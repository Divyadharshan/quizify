<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="shortcut icon" href="/logo.png" type="image/x-icon">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <title>Mini Sudoku</title>
  <style>
    :root {
      --primary: #7B16FF;
      --primary-trans: rgba(123, 22, 255, 0.4);
      --surface: #1e1e2f;
      --dark: #101010;
      --white: #f5f5f5;
      --fixed-bg: #2d2d44;
      --highlight: rgba(123, 22, 255, 0.2);
    }

    body {
      font-family: Arial, sans-serif;
      background: var(--dark);
      color: var(--white);
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 90vh;
    }

    .quiz-container {
      background: var(--surface);
      padding: 20px;
      margin-top: 100px;
      border-radius: 12px;
      box-shadow: 0 4px 15px rgba(0, 0, 0, 0.5);
      text-align: center;
    }

    h1 {
      margin-bottom: 20px;
      color: var(--primary);
    }

    .sudoku-container {
      display: grid;
      grid-template-columns: repeat(6, 50px);
      grid-template-rows: repeat(6, 50px);
      margin: 0 auto;
      border: 3px solid var(--primary);
      border-radius: 10px;
      overflow: hidden;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
    }

    .cell {
      width: 50px;
      height: 50px;
      border: 1px solid #555;
      text-align: center;
      font-size: 20px;
      font-weight: 900;
      color: var(--white);
      background: var(--surface);
      outline: none;
      transition: all 0.2s ease;
    }

    .cell:focus {
      background: var(--primary-trans);
    }

    .cell.prefilled {
      background: var(--fixed-bg);
      color: white;
      font-weight: 900;
      border: 1px solid var(--primary);
      box-shadow: inset 0 0 8px rgba(255, 211, 105, 0.5);
    }

    .cell.wrong {
      background-color: red;
    }

    /* Box borders */
    .cell:nth-child(6n+3),
    .cell:nth-child(6n) {
      border-right: 3px solid var(--primary);
    }

    .cell:nth-child(6n+1) {
      border-left: 3px solid var(--primary);
    }

    .cell:nth-child(n+13):nth-child(-n+18),
    .cell:nth-child(n+25):nth-child(-n+30) {
      border-bottom: 3px solid var(--primary);
    }

    .cell:nth-child(-n+6) {
      border-top: 3px solid var(--primary);
    }

    /* Highlight */
    .highlight {
      background: var(--highlight) !important;
    }

    .navbar {
      position: fixed;
      top: 0;
      width: 96%;
      background: #16171A;
      padding: 1rem 2rem;
      display: flex;
      justify-content: space-between;
      align-items: center;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
      z-index: 1000;
    }

    .navbar h2 {
      color: var(--primary);
      margin: 0;
    }

    .navbar a {
      color: var(--white);
      text-decoration: none;
      margin-left: 1rem;
      transition: color 0.3s;
    }

    .navbar a:hover {
      color: var(--primary);
    }
    .check-btn {
      margin-top: 20px;
      padding: 12px 24px;
      font-size: 18px;
      font-weight: bold;
      background: var(--primary);
      color: var(--white);
      border: none;
      border-radius: 8px;
      cursor: pointer;
      transition: all 0.2s ease;
      box-shadow: 0 4px 10px rgba(0,0,0,0.3); 
    }
  </style>
</head>

<body>
  <%- include("../partials/loader") %>
  <div class="navbar">
    <h2>QUIZIFY</h2>
    <% if(currentUser){ %>
      <div>
        <a href="/"><i class="fa-solid fa-house"></i> Home</a>
        <a href="/logout"><i class="fa-solid fa-right-from-bracket"></i> Logout</a>
      </div>
      <% } else { %>
        <div>
          <a href="/login"><i class="fa fa-sign-in"></i> Login</a>
          <a href="/register"><i class="fa fa-user-plus"></i> Register</a>
        </div>
        <% } %>
  </div>

  <div class="quiz-container">
    <h1>Mini Sudoku</h1>
    <%if(puzzle && solution){%>
    <div class="sudoku-container" id="sudoku"></div>
    <%}else{%>
      <h3>No Sudoku Found</h3>
    <%}%>

  </div>

  <script>
    <% if(puzzle && solution){%>
    const puzzle = <%-JSON.stringify(puzzle)%>;
    const solution = <%-JSON.stringify(solution)%>;
    const sudokuContainer = document.getElementById("sudoku");
    const cells = [];

    puzzle.forEach((row,r) => {
      row.forEach((num,c) => {
        const input = document.createElement("input");
        input.type = "text";
        input.maxLength = 1;
        input.classList.add("cell");
        input.dataset.row = r;
        input.dataset.col = c;
        
        if (num!==0) {
          input.value=num;
          input.disabled=true;
          input.classList.add("prefilled");
        }
        input.addEventListener("input", () => {
          if ("0789".includes(input.value)){
            input.value = "";
          }
          input.classList.remove("wrong");
        });
        input.addEventListener("focus",()=>highlight(r,c));
        input.addEventListener("blur",()=>clearHighlight());
        sudokuContainer.appendChild(input);
        cells.push(input);
      });
    });

    function highlight(row, col) {
      clearHighlight();
      cells.forEach(cell => {
        const r = +cell.dataset.row;
        const c = +cell.dataset.col;
        if (r===row||c===col||(Math.floor(r/2)===Math.floor(row/2) && Math.floor(c/3)===Math.floor(col/3))){
          if (!cell.classList.contains("prefilled")) {
            cell.classList.add("highlight");
          }
        }
      });
    }

    function clearHighlight() {
      for(let i of cells){
        i.classList.remove("highlight");
      }
    }

    function checkSolution() {
      let correct = true;
      let wrongcells = [];
      for (let i = 0; i < cells.length; i++) {
        const cell = cells[i];
        const r = +cell.dataset.row;
        const c = +cell.dataset.col;
        const value = cell.value;

        if (value !== solution[r][c].toString()) {
          correct = false;
          cell.classList.add("wrong"); // highlight wrong cell
          wrongcells.push(cell);
        } else {
          cell.classList.remove("wrong");
        }
      }
      setTimeout(()=>{
        for(let i of wrongcells){
          i.classList.remove("wrong");
        }
      },5000)
      return correct;
    }
    const btn = document.createElement("button");
    btn.textContent = "Check Solution";
    btn.classList.add("check-btn");
    btn.onclick = async()=>{
      if (checkSolution()){
        try {
          const response = await fetch("/sudoku",{
            method: "POST",
            headers: {
              "Content-Type": "application/json"
            },
            body: JSON.stringify({solved:true})
          });
          alert("Correct Solution!üéâüéâ");
          window.location.href="/sudoku";
        } catch (err) {
          console.error("Error submitting sudoku:", err);
        }
      } 
      else{
        alert("Some cells are incorrect ‚ùå");
      }
    };
    document.querySelector(".quiz-container").appendChild(btn);
    <%}%>
  </script>
</body>

</html>